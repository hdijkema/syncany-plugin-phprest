#!bash
# 
# Syncany Bash Completion
# =======================
# 
# Bash completion support for [Syncany](https://www.syncany.org/).
# 
# The script is inspired by the BZR/Bazaar bash completion script 
# available at https://launchpad.net/bzr-bash-completion
# 
# Installation
# ------------
# 
# 1. Place it in a `bash-completion.d` folder:
# 
#   * /etc/bash-completion.d
#   * /usr/local/etc/bash-completion.d
#   * ~/bash-completion.d
# 
# 2. Open new bash, and type `sy [TAB][TAB]`
# 
# Documentation
# -------------
# The script is called by bash whenever [TAB] or [TAB][TAB] is pressed after 
# 'sy (..)'. By reading entered command line parameters, it determines possible
# bash completions and writes them to the COMPREPLY variable. Bash then 
# completes the user input if only one entry is listed in the variable or
# shows the options if more than one is listed in COMPREPLY.
#
# The script first determines the current parameter ($cur), the previous 
# parameter ($prev), the first word ($firstword) and the last word ($lastword).
# Using the $firstword variable (= the command) and a giant switch/case, 
# completions are written to $complete_words and $complete_options. 
#
# If the current user input ($cur) starts with '-', only $command_options are 
# displayed/completed, otherwise only $command_words.
#

shopt -s progcomp
_sy() {
	local cur prev firstword lastword complete_words complete_options

	COMPREPLY=()

	cur=${COMP_WORDS[COMP_CWORD]}
	prev=${COMP_WORDS[COMP_CWORD-1]}
	firstword=$(_sy_get_firstword)
	lastword=$(_sy_get_lastword)

	GLOBAL_COMMANDS="\
		cleanup\
		connect\
		daemon\
		down\
		genlink\
		init\
		ls\
		ls-remote\
		plugin\
		restore\
		status\
		up\
		watch"

	GLOBAL_OPTIONS="\
		-l --localdir\
		-d --debug\
		-h --help\
		-v -vv\
		--log\
		--loglevel\
		--print"

	GLOBAL_LOGLEVELS="\
		OFF\
		SEVERE\
		WARNING\
		INFO\
		FINE\
		FINER\
		FINEST\
		ALL"

	CONNECT_OPTIONS="\
		-P --plugin\
		-o --plugin-option\
		-I --no-interaction\
		-n --add-daemon"

	DOWN_CONFLICT_STRATEGIES="\
		ask\
		rename"

	DOWN_OPTIONS="\
		-C --conflict-strategy\
		-A --no-apply"

	DAEMON_COMMANDS="\
		force-stop\
		reload\
		restart\
		start\
		status\
		stop"

	GENLINK_OPTIONS="\
		-s --short"

	INIT_OPTIONS="\
		-P --plugin\
		-o --plugin-option\
		-E --no-encryption\
		-G --no-compression\
		-t --create-target\
		-a --advanced\
		-I --no-interaction\
		-n --add-daemon"

	LS_OPTIONS="\
		-V --versions\
		-t --types\
		-D --date\
		-r --recursive\
		-f --full-checksums\
		-g --group"

	LS_TYPES="\
		t\
		d\
		f"

	PLUGIN_COMMANDS="\
		list\
		install\
		remove"

	PLUGIN_IDS="\
		ftp\
		local\
		s3\
		samba\
		sftp\
		simpleweb\
		webdav"

	PLUGIN_LIST_OPTIONS="\
		-R --remote-only\
		-L --local-only\
		-s --snapshots"

	PLUGIN_INSTALL_OPTIONS="\
		-s --snapshot"

	PLUGIN_FTP_OPTIONS="\
		hostname=\
		username=\
		password=\
		path=\
		port="

	PLUGIN_LOCAL_OPTIONS="\
		path="

	PLUGIN_S3_OPTIONS="\
		accessKey=\
		secretKey=\
		bucket=\
		location="

	PLUGIN_SAMBA_OPTIONS="\
		hostname=\
		username=\
		password=\
		share=\
		path="

	PLUGIN_SFTP_OPTIONS="\
		hostname=\
		username=\
		privatekey=\
		password=\
		path=\
		port="

	PLUGIN_WEBDAV_OPTIONS="\
		url=\
		username=\
		password="

	RESTORE_OPTIONS="\
		-r --revision\
		-t --target"

	STATUS_OPTIONS="\
		-f --force-checksum"

	UP_OPTIONS="\
		$STATUS_OPTIONS"

	WATCH_OPTIONS="\
		-i --interval\
		-s --delay\
		-W --no-watcher\
		-a --announce\
		-N --no-announcements\
		$UP_OPTIONS\
		$DOWN_OPTIONS"

	CLEANUP_OPTIONS="\
		-M --no-database-merge\
		-V --no-version-removal\
		-T --no-temp-removal\
		-k --keep-versions\
		$STATUS_OPTIONS"

	# Un-comment this for debug purposes:
	#   echo -e "\nprev = $prev, cur = $cur, firstword = $firstword, lastword = $lastword\n"

	case "${firstword}" in
	cleanup)
		complete_options="$CLEANUP_OPTIONS"
		;;

	connect)
		case "${prev}" in
			--plugin|-P) 
				complete_words="$PLUGIN_IDS"
				;;

			--plugin-option|-o)
				# Special handling: Return plugin options and exit
				complete_words=$(_sy_plugin_option_words)

				compopt -o nospace
				COMPREPLY=( $( compgen -W "$complete_words" -- $cur ) )

				return 0
				;;

			*)
				complete_options="$CONNECT_OPTIONS"
				;;
		esac
		;;

	down)
		case "${prev}" in
			--conflict-strategy|-C) 
				complete_words="$DOWN_CONFLICT_STRATEGIES"
				;;

			*)
				complete_options="$DOWN_OPTIONS"
				;;	
		esac
		;;

	daemon)
		case "${lastword}" in
			force-stop|reload|restart|start|status|stop)
				;;
			
			*)
				complete_words="$DAEMON_COMMANDS"
				;;
		esac
		;;

	genlink)
		complete_options="$GENLINK_OPTIONS"
		;;

	init)
		case "${prev}" in
			--plugin|-P) 
				complete_words="$PLUGIN_IDS"
				;;

			--plugin-option|-o)
				# Special handling: Return plugin options and exit
				complete_words=$(_sy_plugin_option_words)

				compopt -o nospace
				COMPREPLY=( $( compgen -W "$complete_words" -- $cur ) )

				return 0
				;;

			*)
				complete_options="$INIT_OPTIONS"
				;;
		esac
		;;
		
	ls)
		case "${prev}" in
			--types|-t) 
				complete_words="$LS_TYPES"
				;;

			*)
				complete_options="$LS_OPTIONS"
				;;
		esac
		;;

	ls-remote)
		;;

	plugin)
		case "${lastword}" in
		list) 
			complete_options="$PLUGIN_LIST_OPTIONS"

			;;
		install) 
			complete_words="$PLUGIN_IDS"
			complete_options="$PLUGIN_INSTALL_OPTIONS"

			;;

		remove) 
			complete_words="$PLUGIN_IDS"
			;;

		*) 
			complete_words="$PLUGIN_COMMANDS"
			;;
		esac
		;;
	
	restore)
		case "${prev}" in
			--target|-t)
				# Special handling: Return file names

				COMPREPLY=( $( compgen -f -- $cur ) )
				return 0
				;;

			*)
				complete_options="$RESTORE_OPTIONS"
				;;
		esac
		;;

	status)
		complete_options="$STATUS_OPTIONS"
		;;

	up)
		complete_options="$UP_OPTIONS"
		;;

	watch)
		case "${prev}" in
			--conflict-strategy|-C) 
				complete_words="$DOWN_CONFLICT_STRATEGIES"
				;;

			*)
				complete_options="$WATCH_OPTIONS"
				;;
		esac
		;;			
	
	*)
		case "${prev}" in
			--log|--localdir|-l)
				# Special handling: return directories, no space at the end

				compopt -o nospace
				COMPREPLY=( $( compgen -d -S "/" -- $cur ) )

				return 0
				;;

			--loglevel)
				complete_words="$GLOBAL_LOGLEVELS"
				;;

			*)
				complete_words="$GLOBAL_COMMANDS"
				complete_options="$GLOBAL_OPTIONS"
				;;
		esac
		;;
	esac

	# Either display words or options, depending on the user input	
	if [[ $cur == -* ]]; then
		COMPREPLY=( $( compgen -W "$complete_options" -- $cur ))
	
	else 
		COMPREPLY=( $( compgen -W "$complete_words" -- $cur ))
	fi

	return 0
}

## Helper functions ###

# Determines the plugin-specific settings set by --plugin-option or -o
# Requires: $COMP_WORDS
_sy_plugin_option_words() {
	local plugin_id i

	plugin_id=
	for ((i = 1; i < ${#COMP_WORDS[@]}; ++i)); do
		if [[ ${COMP_WORDS[i]} == "-P" ]] || [[ ${COMP_WORDS[i]} == "--plugin" ]]; then
			plugin_id=${COMP_WORDS[i+1]}
			break
		fi
	done

	case "${plugin_id}" in
		ftp)
			echo "$PLUGIN_FTP_OPTIONS"
			;;

		local)
			echo "$PLUGIN_LOCAL_OPTIONS"
			;;

		s3)
			echo "$PLUGIN_S3_OPTIONS"
			;;

		samba)
			echo "$PLUGIN_SAMBA_OPTIONS"
			;;

		sftp)
			echo "$PLUGIN_SFTP_OPTIONS"
			;;

		webdav)
			echo "$PLUGIN_WEBDAV_OPTIONS"
			;;

		*)
			;;
	esac
}

# Determines the first non-option word of the command line. This
# is usually the command; Requires: $COMP_WORDS
_sy_get_firstword() {
	local firstword i

	firstword=
	for ((i = 1; i < ${#COMP_WORDS[@]}; ++i)); do
		if [[ ${COMP_WORDS[i]} != -* ]]; then
			firstword=${COMP_WORDS[i]}
			break
		fi
	done

	echo $firstword
}

# Determines the last non-option word of the command line. This
# is usally a sub-command; Requires: $COMP_WORDS, $cur
_sy_get_lastword() {
	local lastword i

	lastword=
	for ((i = 1; i < ${#COMP_WORDS[@]}; ++i)); do
		if [[ ${COMP_WORDS[i]} != -* ]] && [[ -n ${COMP_WORDS[i]} ]] && [[ ${COMP_WORDS[i]} != $cur ]]; then
			lastword=${COMP_WORDS[i]}
		fi
	done

	echo $lastword
}

## Define bash completions ###

complete -F _sy sy
complete -F _sy syncany
